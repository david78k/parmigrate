%!PS-Adobe-2.0 EPSF-2.0
%%Title: sf-gridftp.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Apr 19 07:12:19 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 72050 36050
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sf-gridftp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr 19 07:12:19 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1163 703 M
-63 0 V
stroke
980 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1163 120552 M
-63 0 V
stroke
980 120552 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
1163 240402 M
-63 0 V
stroke
980 240402 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1163 360251 M
-63 0 V
stroke
980 360251 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MRshow
1.000 UL
LTb
1163 480100 M
-63 0 V
stroke
980 480100 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MRshow
1.000 UL
LTb
1163 599950 M
-63 0 V
stroke
980 599950 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MRshow
1.000 UL
LTb
1163 719799 M
-63 0 V
stroke
980 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MRshow
1.000 UL
LTb
1163 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1163 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
144918 703 M
0 -63 V
0 719159 R
0 63 V
stroke
144918 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
1.000 UL
LTb
288674 703 M
0 -63 V
0 719159 R
0 63 V
stroke
288674 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
1.000 UL
LTb
432429 703 M
0 -63 V
0 719159 R
0 63 V
stroke
432429 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1500)]
] -66.7 MCshow
1.000 UL
LTb
576185 703 M
0 -63 V
0 719159 R
0 63 V
stroke
576185 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2000)]
] -66.7 MCshow
1.000 UL
LTb
719940 703 M
0 -63 V
0 719159 R
0 63 V
stroke
719940 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2500)]
] -66.7 MCshow
1.000 UL
LTb
863695 703 M
0 -63 V
0 719159 R
0 63 V
stroke
863695 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3000)]
] -66.7 MCshow
1.000 UL
LTb
1007451 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1007451 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3500)]
] -66.7 MCshow
1.000 UL
LTb
1151206 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1151206 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4000)]
] -66.7 MCshow
1.000 UL
LTb
1294962 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1294962 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4500)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1438717 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5000)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
63 0 V
stroke
1438900 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
1438717 144522 M
63 0 V
stroke
1438900 144522 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MLshow
1.000 UL
LTb
1438717 288341 M
63 0 V
stroke
1438900 288341 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MLshow
1.000 UL
LTb
1438717 432161 M
63 0 V
stroke
1438900 432161 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MLshow
1.000 UL
LTb
1438717 575980 M
63 0 V
stroke
1438900 575980 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MLshow
1.000 UL
LTb
1438717 719799 M
63 0 V
stroke
1438900 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
LCb setrgbcolor
400 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (number of evacuated VMs)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
1439599 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (evacuation ratio)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
719940 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (time \(sec\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
1437814 1866 M
[ [(Helvetica) 200.0 0.0 true true 0 (IC)]
] -66.7 MRshow
LT0
0.00 0.00 0.00 C 1437934 1866 M
543 0 V
30061 24673 M
4422 23970 V
3211 23970 V
236 23969 V
1771 23970 V
3447 23970 V
1320 23970 V
1900 23970 V
1093 23970 V
9238 23970 V
646 23970 V
2988 23969 V
4761 23970 V
7375 23970 V
28239 23970 V
4310 23970 V
4637 23970 V
7671 23970 V
15342 23969 V
1474 23970 V
11144 23970 V
9543 23970 V
6653 23970 V
22823 23970 V
35093 23970 V
13617 23970 V
9620 23969 V
11995 23970 V
46298 23970 V
45668 23970 V
30061 24673 Pls
34483 48643 Pls
37694 72613 Pls
37930 96582 Pls
39701 120552 Pls
43148 144522 Pls
44468 168492 Pls
46368 192462 Pls
47461 216432 Pls
56699 240402 Pls
57345 264372 Pls
60333 288341 Pls
65094 312311 Pls
72469 336281 Pls
100708 360251 Pls
105018 384221 Pls
109655 408191 Pls
117326 432161 Pls
132668 456130 Pls
134142 480100 Pls
145286 504070 Pls
154829 528040 Pls
161482 552010 Pls
184305 575980 Pls
219398 599950 Pls
233015 623920 Pls
242635 647889 Pls
254630 671859 Pls
300928 695829 Pls
346596 719799 Pls
1438205 1866 Pls
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LTb
1437814 1666 M
[ [(Helvetica) 200.0 0.0 true true 0 (AC)]
] -66.7 MRshow
LT1
0.00 0.00 0.00 C 1437934 1666 M
543 0 V
21579 24673 M
7570 23970 V
4796 23970 V
1564 23969 V
3470 23970 V
7501 23970 V
3321 23970 V
2341 23970 V
2334 23970 V
325 23970 V
1052 23970 V
765 23969 V
4839 23970 V
1311 23970 V
22837 23970 V
3680 23970 V
6064 23970 V
9511 23970 V
2610 23969 V
4600 23970 V
5132 23970 V
8551 23970 V
6219 23970 V
10327 23970 V
54242 23970 V
5448 23970 V
11078 23969 V
4471 23970 V
28185 23970 V
25746 23970 V
21579 24673 Crs
29149 48643 Crs
33945 72613 Crs
35509 96582 Crs
38979 120552 Crs
46480 144522 Crs
49801 168492 Crs
52142 192462 Crs
54476 216432 Crs
54801 240402 Crs
55853 264372 Crs
56618 288341 Crs
61457 312311 Crs
62768 336281 Crs
85605 360251 Crs
89285 384221 Crs
95349 408191 Crs
104860 432161 Crs
107470 456130 Crs
112070 480100 Crs
117202 504070 Crs
125753 528040 Crs
131972 552010 Crs
142299 575980 Crs
196541 599950 Crs
201989 623920 Crs
213067 647889 Crs
217538 671859 Crs
245723 695829 Crs
271469 719799 Crs
1438205 1666 Crs
1.000 UP
1.000 UL
LT2
0.00 0.00 0.00 C LTb
1437814 1466 M
[ [(Helvetica) 200.0 0.0 true true 0 (N1)]
] -66.7 MRshow
LT2
0.00 0.00 0.00 C 1437934 1466 M
543 0 V
36639 24673 M
58700 48643 L
85688 72613 L
21063 23969 V
21098 23970 V
21132 23970 V
29145 23970 V
23593 23970 V
22754 23970 V
21135 23970 V
22026 23970 V
24228 23969 V
20986 23970 V
21612 23970 V
39901 23970 V
38802 23970 V
40562 23970 V
46956 23970 V
37095 23969 V
36270 23970 V
44291 23970 V
46240 23970 V
37681 23970 V
42718 23970 V
81285 23970 V
78937 23970 V
79266 23969 V
81958 23970 V
114524 23970 V
156633 23970 V
36639 24673 Star
58700 48643 Star
85688 72613 Star
106751 96582 Star
127849 120552 Star
148981 144522 Star
178126 168492 Star
201719 192462 Star
224473 216432 Star
245608 240402 Star
267634 264372 Star
291862 288341 Star
312848 312311 Star
334460 336281 Star
374361 360251 Star
413163 384221 Star
453725 408191 Star
500681 432161 Star
537776 456130 Star
574046 480100 Star
618337 504070 Star
664577 528040 Star
702258 552010 Star
744976 575980 Star
826261 599950 Star
905198 623920 Star
984464 647889 Star
1066422 671859 Star
1180946 695829 Star
1337579 719799 Star
1438205 1466 Star
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LTb
1437814 1266 M
[ [(Helvetica) 200.0 0.0 true true 0 (N5)]
] -66.7 MRshow
LT3
0.00 0.00 0.00 C 1437934 1266 M
543 0 V
21214 24673 M
38744 48643 L
53708 72613 L
65997 96582 L
12920 23970 V
15632 23970 V
19195 23970 V
13027 23970 V
13938 23970 V
15431 23970 V
14709 23970 V
16434 23969 V
16776 23970 V
16124 23970 V
22946 23970 V
28452 23970 V
30226 23970 V
23895 23970 V
23559 23969 V
25103 23970 V
31140 23970 V
24197 23970 V
21920 23970 V
29757 23970 V
49437 23970 V
50306 23970 V
48943 23969 V
51114 23970 V
66377 23970 V
92841 23970 V
21214 24673 Box
38744 48643 Box
53708 72613 Box
65997 96582 Box
78917 120552 Box
94549 144522 Box
113744 168492 Box
126771 192462 Box
140709 216432 Box
156140 240402 Box
170849 264372 Box
187283 288341 Box
204059 312311 Box
220183 336281 Box
243129 360251 Box
271581 384221 Box
301807 408191 Box
325702 432161 Box
349261 456130 Box
374364 480100 Box
405504 504070 Box
429701 528040 Box
451621 552010 Box
481378 575980 Box
530815 599950 Box
581121 623920 Box
630064 647889 Box
681178 671859 Box
747555 695829 Box
840396 719799 Box
1438205 1266 Box
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LTb
1437814 1066 M
[ [(Helvetica) 200.0 0.0 true true 0 (N10)]
] -66.7 MRshow
LT4
0.00 0.00 0.00 C 1437934 1066 M
543 0 V
27502 24673 M
40923 48643 L
56845 72613 L
72313 96582 L
14166 23970 V
12124 23970 V
16153 23970 V
13309 23970 V
13429 23970 V
12967 23970 V
15471 23970 V
15914 23969 V
18282 23970 V
14988 23970 V
22975 23970 V
22096 23970 V
28894 23970 V
29519 23970 V
22483 23969 V
22101 23970 V
28979 23970 V
28199 23970 V
22124 23970 V
29041 23970 V
48817 23970 V
49934 23970 V
46462 23969 V
50823 23970 V
67669 23970 V
92935 23970 V
27502 24673 BoxF
40923 48643 BoxF
56845 72613 BoxF
72313 96582 BoxF
86479 120552 BoxF
98603 144522 BoxF
114756 168492 BoxF
128065 192462 BoxF
141494 216432 BoxF
154461 240402 BoxF
169932 264372 BoxF
185846 288341 BoxF
204128 312311 BoxF
219116 336281 BoxF
242091 360251 BoxF
264187 384221 BoxF
293081 408191 BoxF
322600 432161 BoxF
345083 456130 BoxF
367184 480100 BoxF
396163 504070 BoxF
424362 528040 BoxF
446486 552010 BoxF
475527 575980 BoxF
524344 599950 BoxF
574278 623920 BoxF
620740 647889 BoxF
671563 671859 BoxF
739232 695829 BoxF
832167 719799 BoxF
1438205 1066 BoxF
1.000 UP
1.000 UL
LT5
0.00 0.00 0.00 C LTb
1437814 866 M
[ [(Helvetica) 200.0 0.0 true true 0 (N30)]
] -66.7 MRshow
LT5
0.00 0.00 0.00 C 1437934 866 M
543 0 V
29187 24673 M
47556 48643 L
68550 72613 L
86157 96582 L
17159 23970 V
15979 23970 V
22912 23970 V
18056 23970 V
15071 23970 V
15603 23970 V
16035 23970 V
16652 23969 V
18134 23970 V
18662 23970 V
23191 23970 V
22227 23970 V
28961 23970 V
30022 23970 V
23056 23969 V
22500 23970 V
28478 23970 V
30453 23970 V
23363 23970 V
29821 23970 V
49167 23970 V
49852 23970 V
46778 23969 V
50800 23970 V
66441 23970 V
92035 23970 V
29187 24673 Circle
47556 48643 Circle
68550 72613 Circle
86157 96582 Circle
103316 120552 Circle
119295 144522 Circle
142207 168492 Circle
160263 192462 Circle
175334 216432 Circle
190937 240402 Circle
206972 264372 Circle
223624 288341 Circle
241758 312311 Circle
260420 336281 Circle
283611 360251 Circle
305838 384221 Circle
334799 408191 Circle
364821 432161 Circle
387877 456130 Circle
410377 480100 Circle
438855 504070 Circle
469308 528040 Circle
492671 552010 Circle
522492 575980 Circle
571659 599950 Circle
621511 623920 Circle
668289 647889 Circle
719089 671859 Circle
785530 695829 Circle
877565 719799 Circle
1438205 866 Circle
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
