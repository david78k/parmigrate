%!PS-Adobe-2.0 EPSF-2.0
%%Title: sf-gridftp.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Apr 19 07:15:18 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 72050 36050
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sf-gridftp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr 19 07:15:18 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1163 703 M
-63 0 V
stroke
980 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1163 120552 M
-63 0 V
stroke
980 120552 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
1163 240402 M
-63 0 V
stroke
980 240402 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1163 360251 M
-63 0 V
stroke
980 360251 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MRshow
1.000 UL
LTb
1163 480100 M
-63 0 V
stroke
980 480100 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MRshow
1.000 UL
LTb
1163 599950 M
-63 0 V
stroke
980 599950 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MRshow
1.000 UL
LTb
1163 719799 M
-63 0 V
stroke
980 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MRshow
1.000 UL
LTb
1163 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1163 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
240755 703 M
0 -63 V
0 719159 R
0 63 V
stroke
240755 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
1.000 UL
LTb
480348 703 M
0 -63 V
0 719159 R
0 63 V
stroke
480348 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
1.000 UL
LTb
719940 703 M
0 -63 V
0 719159 R
0 63 V
stroke
719940 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1500)]
] -66.7 MCshow
1.000 UL
LTb
959532 703 M
0 -63 V
0 719159 R
0 63 V
stroke
959532 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2000)]
] -66.7 MCshow
1.000 UL
LTb
1199125 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1199125 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2500)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1438717 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3000)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
63 0 V
stroke
1438900 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
1438717 144522 M
63 0 V
stroke
1438900 144522 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MLshow
1.000 UL
LTb
1438717 288341 M
63 0 V
stroke
1438900 288341 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MLshow
1.000 UL
LTb
1438717 432161 M
63 0 V
stroke
1438900 432161 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MLshow
1.000 UL
LTb
1438717 575980 M
63 0 V
stroke
1438900 575980 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MLshow
1.000 UL
LTb
1438717 719799 M
63 0 V
stroke
1438900 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
LCb setrgbcolor
400 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (number of evacuated VMs)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
1439599 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (evacuation ratio)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
719940 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (time \(sec\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
1437814 1866 M
[ [(Helvetica) 200.0 0.0 true true 0 (IC)]
] -66.7 MRshow
LT0
0.00 0.00 0.00 C 1437934 1866 M
543 0 V
25300 24673 M
3713 23970 V
7284 23970 V
3661 23969 V
3618 23970 V
4173 23970 V
6067 23970 V
7082 23970 V
1620 23970 V
2923 23970 V
1183 23970 V
3489 23969 V
6531 23970 V
3829 23970 V
26705 23970 V
6881 23970 V
11577 23970 V
1318 23970 V
8088 23969 V
20495 23970 V
6790 23970 V
14793 23970 V
2372 23970 V
25444 23970 V
28196 23970 V
1643 23970 V
15339 23969 V
39441 23970 V
39169 23970 V
20816 23970 V
25300 24673 Pls
29013 48643 Pls
36297 72613 Pls
39958 96582 Pls
43576 120552 Pls
47749 144522 Pls
53816 168492 Pls
60898 192462 Pls
62518 216432 Pls
65441 240402 Pls
66624 264372 Pls
70113 288341 Pls
76644 312311 Pls
80473 336281 Pls
107178 360251 Pls
114059 384221 Pls
125636 408191 Pls
126954 432161 Pls
135042 456130 Pls
155537 480100 Pls
162327 504070 Pls
177120 528040 Pls
179492 552010 Pls
204936 575980 Pls
233132 599950 Pls
234775 623920 Pls
250114 647889 Pls
289555 671859 Pls
328724 695829 Pls
349540 719799 Pls
1438205 1866 Pls
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LTb
1437814 1666 M
[ [(Helvetica) 200.0 0.0 true true 0 (AC)]
] -66.7 MRshow
LT1
0.00 0.00 0.00 C 1437934 1666 M
543 0 V
17709 24673 M
7107 23970 V
37998 72613 L
2041 23969 V
1030 23970 V
12033 23970 V
2156 23970 V
7897 23970 V
6220 23970 V
8146 23970 V
1955 23970 V
12421 23969 V
3014 23970 V
26336 23970 V
5726 23970 V
18266 23970 V
13446 23970 V
2415 23970 V
12684 23969 V
5176 23970 V
6996 23970 V
13676 23970 V
9818 23970 V
28526 23970 V
20744 23970 V
7686 23970 V
6167 23969 V
54292 23970 V
37065 23970 V
33912 23970 V
17709 24673 Crs
24816 48643 Crs
37998 72613 Crs
40039 96582 Crs
41069 120552 Crs
53102 144522 Crs
55258 168492 Crs
63155 192462 Crs
69375 216432 Crs
77521 240402 Crs
79476 264372 Crs
91897 288341 Crs
94911 312311 Crs
121247 336281 Crs
126973 360251 Crs
145239 384221 Crs
158685 408191 Crs
161100 432161 Crs
173784 456130 Crs
178960 480100 Crs
185956 504070 Crs
199632 528040 Crs
209450 552010 Crs
237976 575980 Crs
258720 599950 Crs
266406 623920 Crs
272573 647889 Crs
326865 671859 Crs
363930 695829 Crs
397842 719799 Crs
1438205 1666 Crs
1.000 UP
1.000 UL
LT2
0.00 0.00 0.00 C LTb
1437814 1466 M
[ [(Helvetica) 200.0 0.0 true true 0 (N1)]
] -66.7 MRshow
LT2
0.00 0.00 0.00 C 1437934 1466 M
543 0 V
33925 24673 M
56154 48643 L
85327 72613 L
20667 23969 V
22254 23970 V
18026 23970 V
29882 23970 V
22733 23970 V
22613 23970 V
22684 23970 V
21990 23970 V
21875 23969 V
26326 23970 V
23763 23970 V
38761 23970 V
41133 23970 V
44315 23970 V
45077 23970 V
38910 23969 V
43103 23970 V
47118 23970 V
43314 23970 V
40275 23970 V
38215 23970 V
88688 23970 V
91270 23970 V
80680 23969 V
87978 23970 V
124301 23970 V
173029 23970 V
33925 24673 Star
56154 48643 Star
85327 72613 Star
105994 96582 Star
128248 120552 Star
146274 144522 Star
176156 168492 Star
198889 192462 Star
221502 216432 Star
244186 240402 Star
266176 264372 Star
288051 288341 Star
314377 312311 Star
338140 336281 Star
376901 360251 Star
418034 384221 Star
462349 408191 Star
507426 432161 Star
546336 456130 Star
589439 480100 Star
636557 504070 Star
679871 528040 Star
720146 552010 Star
758361 575980 Star
847049 599950 Star
938319 623920 Star
1018999 647889 Star
1106977 671859 Star
1231278 695829 Star
1404307 719799 Star
1438205 1466 Star
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LTb
1437814 1266 M
[ [(Helvetica) 200.0 0.0 true true 0 (N5)]
] -66.7 MRshow
LT3
0.00 0.00 0.00 C 1437934 1266 M
543 0 V
38870 24673 M
57367 48643 L
82222 72613 L
22129 23969 V
21098 23970 V
16551 23970 V
24587 23970 V
21664 23970 V
21199 23970 V
18679 23970 V
18899 23970 V
21630 23969 V
19263 23970 V
24357 23970 V
33318 23970 V
30333 23970 V
45977 23970 V
44838 23970 V
31631 23969 V
30298 23970 V
42720 23970 V
41272 23970 V
31434 23970 V
45341 23970 V
77412 23970 V
78237 23970 V
74503 23969 V
79842 23970 V
107730 23970 V
151063 23970 V
38870 24673 Box
57367 48643 Box
82222 72613 Box
104351 96582 Box
125449 120552 Box
142000 144522 Box
166587 168492 Box
188251 192462 Box
209450 216432 Box
228129 240402 Box
247028 264372 Box
268658 288341 Box
287921 312311 Box
312278 336281 Box
345596 360251 Box
375929 384221 Box
421906 408191 Box
466744 432161 Box
498375 456130 Box
528673 480100 Box
571393 504070 Box
612665 528040 Box
644099 552010 Box
689440 575980 Box
766852 599950 Box
845089 623920 Box
919592 647889 Box
999434 671859 Box
1107164 695829 Box
1258227 719799 Box
1438205 1266 Box
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LTb
1437814 1066 M
[ [(Helvetica) 200.0 0.0 true true 0 (N10)]
] -66.7 MRshow
LT4
0.00 0.00 0.00 C 1437934 1066 M
543 0 V
35923 24673 M
54290 48643 L
78935 72613 L
99957 96582 L
21879 23970 V
14821 23970 V
23864 23970 V
23743 23970 V
19479 23970 V
17083 23970 V
17327 23970 V
20136 23969 V
23240 23970 V
22972 23970 V
31473 23970 V
30270 23970 V
46040 23970 V
39825 23970 V
31511 23969 V
30079 23970 V
44181 23970 V
43400 23970 V
29766 23970 V
40899 23970 V
75869 23970 V
78198 23970 V
76315 23969 V
80019 23970 V
108641 23970 V
151351 23970 V
35923 24673 BoxF
54290 48643 BoxF
78935 72613 BoxF
99957 96582 BoxF
121836 120552 BoxF
136657 144522 BoxF
160521 168492 BoxF
184264 192462 BoxF
203743 216432 BoxF
220826 240402 BoxF
238153 264372 BoxF
258289 288341 BoxF
281529 312311 BoxF
304501 336281 BoxF
335974 360251 BoxF
366244 384221 BoxF
412284 408191 BoxF
452109 432161 BoxF
483620 456130 BoxF
513699 480100 BoxF
557880 504070 BoxF
601280 528040 BoxF
631046 552010 BoxF
671945 575980 BoxF
747814 599950 BoxF
826012 623920 BoxF
902327 647889 BoxF
982346 671859 BoxF
1090987 695829 BoxF
1242338 719799 BoxF
1438205 1066 BoxF
1.000 UP
1.000 UL
LT5
0.00 0.00 0.00 C LTb
1437814 866 M
[ [(Helvetica) 200.0 0.0 true true 0 (N30)]
] -66.7 MRshow
LT5
0.00 0.00 0.00 C 1437934 866 M
543 0 V
31898 24673 M
50644 48643 L
75408 72613 L
97331 96582 L
21218 23970 V
17289 23970 V
25262 23970 V
21056 23970 V
22507 23970 V
15837 23970 V
17716 23970 V
17408 23969 V
26916 23970 V
25186 23970 V
32441 23970 V
30778 23970 V
44780 23970 V
46332 23970 V
31655 23969 V
30486 23970 V
45393 23970 V
43127 23970 V
32028 23970 V
41574 23970 V
76210 23970 V
77388 23970 V
73138 23969 V
79387 23970 V
105885 23970 V
150344 23970 V
31898 24673 Circle
50644 48643 Circle
75408 72613 Circle
97331 96582 Circle
118549 120552 Circle
135838 144522 Circle
161100 168492 Circle
182156 192462 Circle
204663 216432 Circle
220500 240402 Circle
238216 264372 Circle
255624 288341 Circle
282540 312311 Circle
307726 336281 Circle
340167 360251 Circle
370945 384221 Circle
415725 408191 Circle
462057 432161 Circle
493712 456130 Circle
524198 480100 Circle
569591 504070 Circle
612718 528040 Circle
644746 552010 Circle
686320 575980 Circle
762530 599950 Circle
839918 623920 Circle
913056 647889 Circle
992443 671859 Circle
1098328 695829 Circle
1248672 719799 Circle
1438205 866 Circle
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
