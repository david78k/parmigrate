%!PS-Adobe-2.0 EPSF-2.0
%%Title: rand-small.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Apr 19 02:24:57 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 72050 36050
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rand-small.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr 19 02:24:57 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1163 703 M
-63 0 V
stroke
980 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1163 120552 M
-63 0 V
stroke
980 120552 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
1163 240402 M
-63 0 V
stroke
980 240402 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1163 360251 M
-63 0 V
stroke
980 360251 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MRshow
1.000 UL
LTb
1163 480100 M
-63 0 V
stroke
980 480100 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MRshow
1.000 UL
LTb
1163 599950 M
-63 0 V
stroke
980 599950 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MRshow
1.000 UL
LTb
1163 719799 M
-63 0 V
stroke
980 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MRshow
1.000 UL
LTb
1163 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1163 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
240755 703 M
0 -63 V
0 719159 R
0 63 V
stroke
240755 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
480348 703 M
0 -63 V
0 719159 R
0 63 V
stroke
480348 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
719940 703 M
0 -63 V
0 719159 R
0 63 V
stroke
719940 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 600)]
] -66.7 MCshow
1.000 UL
LTb
959532 703 M
0 -63 V
0 719159 R
0 63 V
stroke
959532 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 800)]
] -66.7 MCshow
1.000 UL
LTb
1199125 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1199125 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1438717 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1200)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
63 0 V
stroke
1438900 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
1438717 144522 M
63 0 V
stroke
1438900 144522 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MLshow
1.000 UL
LTb
1438717 288341 M
63 0 V
stroke
1438900 288341 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MLshow
1.000 UL
LTb
1438717 432161 M
63 0 V
stroke
1438900 432161 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MLshow
1.000 UL
LTb
1438717 575980 M
63 0 V
stroke
1438900 575980 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MLshow
1.000 UL
LTb
1438717 719799 M
63 0 V
stroke
1438900 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
LCb setrgbcolor
400 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (number of evacuated VMs)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
1439599 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (evacuation ratio)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
719940 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (time \(sec\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
1437814 1866 M
[ [(Helvetica) 200.0 0.0 true true 0 (IC)]
] -66.7 MRshow
LT0
0.00 0.00 0.00 C 1437934 1866 M
543 0 V
50783 24673 M
98617 48643 L
29865 23970 V
21228 23969 V
19383 23970 V
28440 23970 V
22989 23970 V
21659 23970 V
26175 23970 V
26511 23970 V
12315 23970 V
4864 23969 V
27086 23970 V
35304 23970 V
19395 23970 V
29757 23970 V
17359 23970 V
9080 23970 V
25133 23969 V
17539 23970 V
15046 23970 V
11860 23970 V
23696 23970 V
15381 23970 V
30800 23970 V
12004 23970 V
4540 23969 V
11848 23970 V
16783 23970 V
15657 23970 V
50783 24673 Pls
98617 48643 Pls
128482 72613 Pls
149710 96582 Pls
169093 120552 Pls
197533 144522 Pls
220522 168492 Pls
242181 192462 Pls
268356 216432 Pls
294867 240402 Pls
307182 264372 Pls
312046 288341 Pls
339132 312311 Pls
374436 336281 Pls
393831 360251 Pls
423588 384221 Pls
440947 408191 Pls
450027 432161 Pls
475160 456130 Pls
492699 480100 Pls
507745 504070 Pls
519605 528040 Pls
543301 552010 Pls
558682 575980 Pls
589482 599950 Pls
601486 623920 Pls
606026 647889 Pls
617874 671859 Pls
634657 695829 Pls
650314 719799 Pls
1438205 1866 Pls
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LTb
1437814 1666 M
[ [(Helvetica) 200.0 0.0 true true 0 (AC)]
] -66.7 MRshow
LT1
0.00 0.00 0.00 C 1437934 1666 M
543 0 V
24943 24673 M
55778 48643 L
70597 72613 L
86614 96582 L
12291 23970 V
7595 23970 V
18580 23970 V
8637 23970 V
21803 23970 V
13561 23970 V
8542 23970 V
20509 23969 V
6481 23970 V
17598 23970 V
6181 23970 V
16904 23970 V
31722 23970 V
6481 23970 V
29661 23969 V
9931 23970 V
9260 23970 V
22283 23970 V
16987 23970 V
32033 23970 V
6984 23970 V
26128 23970 V
18688 23969 V
20869 23970 V
5163 23970 V
4049 23970 V
24943 24673 Crs
55778 48643 Crs
70597 72613 Crs
86614 96582 Crs
98905 120552 Crs
106500 144522 Crs
125080 168492 Crs
133717 192462 Crs
155520 216432 Crs
169081 240402 Crs
177623 264372 Crs
198132 288341 Crs
204613 312311 Crs
222211 336281 Crs
228392 360251 Crs
245296 384221 Crs
277018 408191 Crs
283499 432161 Crs
313160 456130 Crs
323091 480100 Crs
332351 504070 Crs
354634 528040 Crs
371621 552010 Crs
403654 575980 Crs
410638 599950 Crs
436766 623920 Crs
455454 647889 Crs
476323 671859 Crs
481486 695829 Crs
485535 719799 Crs
1438205 1666 Crs
1.000 UP
1.000 UL
LT2
0.00 0.00 0.00 C LTb
1437814 1466 M
[ [(Helvetica) 200.0 0.0 true true 0 (1VM)]
] -66.7 MRshow
LT2
0.00 0.00 0.00 C 1437934 1466 M
543 0 V
56018 24673 M
87991 48643 L
190716 72613 L
22295 23969 V
61407 23970 V
22222 23970 V
41534 23970 V
53764 23970 V
31722 23970 V
53309 23970 V
52124 23970 V
22234 23969 V
31662 23970 V
31758 23970 V
52291 23970 V
80431 23970 V
80767 23970 V
31889 23970 V
62223 23969 V
22150 23970 V
93549 23970 V
22545 23970 V
32261 23970 V
32070 23970 V
61863 23970 V
52770 23970 V
22617 23969 V
31770 23970 V
34298 23970 V
32189 23970 V
56018 24673 Star
87991 48643 Star
190716 72613 Star
213011 96582 Star
274418 120552 Star
296640 144522 Star
338174 168492 Star
391938 192462 Star
423660 216432 Star
476969 240402 Star
529093 264372 Star
551327 288341 Star
582989 312311 Star
614747 336281 Star
667038 360251 Star
747469 384221 Star
828236 408191 Star
860125 432161 Star
922348 456130 Star
944498 480100 Star
1038047 504070 Star
1060592 528040 Star
1092853 552010 Star
1124923 575980 Star
1186786 599950 Star
1239556 623920 Star
1262173 647889 Star
1293943 671859 Star
1328241 695829 Star
1360430 719799 Star
1438205 1466 Star
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LTb
1437814 1266 M
[ [(Helvetica) 200.0 0.0 true true 0 (5VMs)]
] -66.7 MRshow
LT3
0.00 0.00 0.00 C 1437934 1266 M
543 0 V
59228 24673 M
75281 48643 L
5534 23970 V
26739 23969 V
24618 23970 V
14088 23970 V
36550 23970 V
3690 23970 V
18496 23970 V
27422 23970 V
7199 23970 V
11501 23969 V
20078 23970 V
29553 23970 V
20641 23970 V
4636 23970 V
14484 23970 V
11632 23970 V
15993 23969 V
26007 23970 V
12723 23970 V
29877 23970 V
12207 23970 V
13992 23970 V
10626 23970 V
21000 23970 V
16269 23969 V
10075 23970 V
29026 23970 V
37772 23970 V
59228 24673 Box
75281 48643 Box
80815 72613 Box
107554 96582 Box
132172 120552 Box
146260 144522 Box
182810 168492 Box
186500 192462 Box
204996 216432 Box
232418 240402 Box
239617 264372 Box
251118 288341 Box
271196 312311 Box
300749 336281 Box
321390 360251 Box
326026 384221 Box
340510 408191 Box
352142 432161 Box
368135 456130 Box
394142 480100 Box
406865 504070 Box
436742 528040 Box
448949 552010 Box
462941 575980 Box
473567 599950 Box
494567 623920 Box
510836 647889 Box
520911 671859 Box
549937 695829 Box
587709 719799 Box
1438205 1266 Box
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LTb
1437814 1066 M
[ [(Helvetica) 200.0 0.0 true true 0 (10VMs)]
] -66.7 MRshow
LT4
0.00 0.00 0.00 C 1437934 1066 M
543 0 V
71519 24673 M
92783 48643 L
8242 23970 V
1941 23969 V
7799 23970 V
10925 23970 V
5355 23970 V
23935 23970 V
13405 23970 V
887 23970 V
4253 23970 V
10637 23969 V
36862 23970 V
16591 23970 V
17275 23970 V
35939 23970 V
19599 23970 V
13153 23970 V
11477 23969 V
2767 23970 V
19730 23970 V
17431 23970 V
7080 23970 V
14303 23970 V
4109 23970 V
14747 23970 V
27470 23969 V
11823 23970 V
33124 23970 V
37664 23970 V
71519 24673 BoxF
92783 48643 BoxF
101025 72613 BoxF
102966 96582 BoxF
110765 120552 BoxF
121690 144522 BoxF
127045 168492 BoxF
150980 192462 BoxF
164385 216432 BoxF
165272 240402 BoxF
169525 264372 BoxF
180162 288341 BoxF
217024 312311 BoxF
233615 336281 BoxF
250890 360251 BoxF
286829 384221 BoxF
306428 408191 BoxF
319581 432161 BoxF
331058 456130 BoxF
333825 480100 BoxF
353555 504070 BoxF
370986 528040 BoxF
378066 552010 BoxF
392369 575980 BoxF
396478 599950 BoxF
411225 623920 BoxF
438695 647889 BoxF
450518 671859 BoxF
483642 695829 BoxF
521306 719799 BoxF
1438205 1066 BoxF
1.000 UP
1.000 UL
LT5
0.00 0.00 0.00 C LTb
1437814 866 M
[ [(Helvetica) 200.0 0.0 true true 0 (30VMs)]
] -66.7 MRshow
LT5
0.00 0.00 0.00 C 1437934 866 M
543 0 V
155856 24673 M
10278 23970 V
9692 23970 V
6385 23969 V
4169 23970 V
4588 23970 V
3199 23970 V
4720 23970 V
6588 23970 V
4349 23970 V
2396 23970 V
18209 23969 V
4169 23970 V
17107 23970 V
13800 23970 V
3582 23970 V
6613 23970 V
8577 23970 V
5739 23969 V
1593 23970 V
2767 23970 V
6098 23970 V
1258 23970 V
16855 23970 V
56436 23970 V
9080 23970 V
9452 23969 V
16844 23970 V
47942 23970 V
26415 23970 V
155856 24673 Circle
166134 48643 Circle
175826 72613 Circle
182211 96582 Circle
186380 120552 Circle
190968 144522 Circle
194167 168492 Circle
198887 192462 Circle
205475 216432 Circle
209824 240402 Circle
212220 264372 Circle
230429 288341 Circle
234598 312311 Circle
251705 336281 Circle
265505 360251 Circle
269087 384221 Circle
275700 408191 Circle
284277 432161 Circle
290016 456130 Circle
291609 480100 Circle
294376 504070 Circle
300474 528040 Circle
301732 552010 Circle
318587 575980 Circle
375023 599950 Circle
384103 623920 Circle
393555 647889 Circle
410399 671859 Circle
458341 695829 Circle
484756 719799 Circle
1438205 866 Circle
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
