%!PS-Adobe-2.0 EPSF-2.0
%%Title: rand.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Apr 18 11:46:13 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rand.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Apr 18 11:46:13 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1713 1023 M
-63 0 V
stroke
1470 1023 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MRshow
1.000 UL
LTb
1713 1642 M
-63 0 V
stroke
1470 1642 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 5)]
] -100.0 MRshow
1.000 UL
LTb
1713 2262 M
-63 0 V
stroke
1470 2262 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 10)]
] -100.0 MRshow
1.000 UL
LTb
1713 2881 M
-63 0 V
stroke
1470 2881 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 15)]
] -100.0 MRshow
1.000 UL
LTb
1713 3500 M
-63 0 V
stroke
1470 3500 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 20)]
] -100.0 MRshow
1.000 UL
LTb
1713 4120 M
-63 0 V
stroke
1470 4120 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 25)]
] -100.0 MRshow
1.000 UL
LTb
1713 4739 M
-63 0 V
stroke
1470 4739 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 30)]
] -100.0 MRshow
1.000 UL
LTb
1713 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
1713 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 0)]
] -100.0 MCshow
1.000 UL
LTb
2343 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
2343 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 200)]
] -100.0 MCshow
1.000 UL
LTb
2972 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
2972 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 400)]
] -100.0 MCshow
1.000 UL
LTb
3602 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
3602 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 600)]
] -100.0 MCshow
1.000 UL
LTb
4232 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
4232 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 800)]
] -100.0 MCshow
1.000 UL
LTb
4861 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
4861 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1000)]
] -100.0 MCshow
1.000 UL
LTb
5491 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
5491 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1200)]
] -100.0 MCshow
1.000 UL
LTb
6120 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
6120 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1400)]
] -100.0 MCshow
1.000 UL
LTb
6750 1023 M
0 -63 V
0 3779 R
0 63 V
stroke
6750 660 M
[ [(Helvetica) 300.0 0.0 true true 0 ( 1600)]
] -100.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
1713 4739 N
0 -3716 V
5037 0 V
0 3716 V
-5037 0 V
Z stroke
LCb setrgbcolor
600 2881 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 300.0 0.0 true true 0 (number of evacuated VMs)]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
4231 210 M
[ [(Helvetica) 300.0 0.0 true true 0 (time \(sec\))]
] -100.0 MCshow
LTb
4231 5252 M
[ [(Helvetica) 300.0 0.0 true true 0 (evacuation)]
] -100.0 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
5427 2736 M
[ [(Helvetica) 300.0 0.0 true true 0 (IC)]
] -100.0 MRshow
LT0
0.00 0.00 0.00 C 5607 2736 M
783 0 V
1819 1147 M
86 124 V
59 124 V
116 123 V
17 124 V
79 124 V
74 124 V
133 124 V
20 124 V
261 124 V
6 124 V
32 123 V
17 124 V
33 124 V
105 124 V
127 124 V
66 124 V
45 124 V
44 123 V
94 124 V
70 124 V
156 124 V
41 124 V
108 124 V
107 124 V
189 124 V
46 123 V
12 124 V
214 124 V
228 124 V
1819 1147 Pls
1905 1271 Pls
1964 1395 Pls
2080 1518 Pls
2097 1642 Pls
2176 1766 Pls
2250 1890 Pls
2383 2014 Pls
2403 2138 Pls
2664 2262 Pls
2670 2386 Pls
2702 2509 Pls
2719 2633 Pls
2752 2757 Pls
2857 2881 Pls
2984 3005 Pls
3050 3129 Pls
3095 3253 Pls
3139 3376 Pls
3233 3500 Pls
3303 3624 Pls
3459 3748 Pls
3500 3872 Pls
3608 3996 Pls
3715 4120 Pls
3904 4244 Pls
3950 4367 Pls
3962 4491 Pls
4176 4615 Pls
4404 4739 Pls
5998 2736 Pls
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LTb
5427 2436 M
[ [(Helvetica) 300.0 0.0 true true 0 (AC)]
] -100.0 MRshow
LT1
0.00 0.00 0.00 C 5607 2436 M
783 0 V
1820 1147 M
146 124 V
20 124 V
46 123 V
79 124 V
49 124 V
31 124 V
4 124 V
115 124 V
62 124 V
28 124 V
2 123 V
107 124 V
96 124 V
64 124 V
61 124 V
31 124 V
30 124 V
21 123 V
53 124 V
49 124 V
11 124 V
55 124 V
34 124 V
118 124 V
40 124 V
98 123 V
124 124 V
156 124 V
107 124 V
1820 1147 Crs
1966 1271 Crs
1986 1395 Crs
2032 1518 Crs
2111 1642 Crs
2160 1766 Crs
2191 1890 Crs
2195 2014 Crs
2310 2138 Crs
2372 2262 Crs
2400 2386 Crs
2402 2509 Crs
2509 2633 Crs
2605 2757 Crs
2669 2881 Crs
2730 3005 Crs
2761 3129 Crs
2791 3253 Crs
2812 3376 Crs
2865 3500 Crs
2914 3624 Crs
2925 3748 Crs
2980 3872 Crs
3014 3996 Crs
3132 4120 Crs
3172 4244 Crs
3270 4367 Crs
3394 4491 Crs
3550 4615 Crs
3657 4739 Crs
5998 2436 Crs
1.000 UP
1.000 UL
LT2
0.00 0.00 0.00 C LTb
5427 2136 M
[ [(Helvetica) 300.0 0.0 true true 0 (1VM)]
] -100.0 MRshow
LT2
0.00 0.00 0.00 C 5607 2136 M
783 0 V
1834 1147 M
58 124 V
145 124 V
180 123 V
60 124 V
270 124 V
222 124 V
341 124 V
58 124 V
272 124 V
90 124 V
144 123 V
135 124 V
68 124 V
165 124 V
176 124 V
85 124 V
392 124 V
176 123 V
136 124 V
202 124 V
87 124 V
119 124 V
176 124 V
59 124 V
85 124 V
256 123 V
141 124 V
173 124 V
110 124 V
1834 1147 Star
1892 1271 Star
2037 1395 Star
2217 1518 Star
2277 1642 Star
2547 1766 Star
2769 1890 Star
3110 2014 Star
3168 2138 Star
3440 2262 Star
3530 2386 Star
3674 2509 Star
3809 2633 Star
3877 2757 Star
4042 2881 Star
4218 3005 Star
4303 3129 Star
4695 3253 Star
4871 3376 Star
5007 3500 Star
5209 3624 Star
5296 3748 Star
5415 3872 Star
5591 3996 Star
5650 4120 Star
5735 4244 Star
5991 4367 Star
6132 4491 Star
6305 4615 Star
6415 4739 Star
5998 2136 Star
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LTb
5427 1836 M
[ [(Helvetica) 300.0 0.0 true true 0 (5VMs)]
] -100.0 MRshow
LT3
0.00 0.00 0.00 C 5607 1836 M
783 0 V
1930 1147 M
56 124 V
27 124 V
85 123 V
77 124 V
168 124 V
27 124 V
104 124 V
106 124 V
58 124 V
66 124 V
100 123 V
74 124 V
52 124 V
107 124 V
103 124 V
146 124 V
13 124 V
2 123 V
63 124 V
117 124 V
123 124 V
131 124 V
41 124 V
94 124 V
109 124 V
84 123 V
115 124 V
163 124 V
295 124 V
1930 1147 Box
1986 1271 Box
2013 1395 Box
2098 1518 Box
2175 1642 Box
2343 1766 Box
2370 1890 Box
2474 2014 Box
2580 2138 Box
2638 2262 Box
2704 2386 Box
2804 2509 Box
2878 2633 Box
2930 2757 Box
3037 2881 Box
3140 3005 Box
3286 3129 Box
3299 3253 Box
3301 3376 Box
3364 3500 Box
3481 3624 Box
3604 3748 Box
3735 3872 Box
3776 3996 Box
3870 4120 Box
3979 4244 Box
4063 4367 Box
4178 4491 Box
4341 4615 Box
4636 4739 Box
5998 1836 Box
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LTb
5427 1536 M
[ [(Helvetica) 300.0 0.0 true true 0 (10VMs)]
] -100.0 MRshow
LT4
0.00 0.00 0.00 C 5607 1536 M
783 0 V
2018 1147 M
31 124 V
16 124 V
134 123 V
16 124 V
62 124 V
141 124 V
38 124 V
65 124 V
26 124 V
81 124 V
99 123 V
36 124 V
37 124 V
12 124 V
63 124 V
48 124 V
97 124 V
36 123 V
103 124 V
9 124 V
121 124 V
23 124 V
32 124 V
31 124 V
17 124 V
121 123 V
199 124 V
11 124 V
125 124 V
2018 1147 BoxF
2049 1271 BoxF
2065 1395 BoxF
2199 1518 BoxF
2215 1642 BoxF
2277 1766 BoxF
2418 1890 BoxF
2456 2014 BoxF
2521 2138 BoxF
2547 2262 BoxF
2628 2386 BoxF
2727 2509 BoxF
2763 2633 BoxF
2800 2757 BoxF
2812 2881 BoxF
2875 3005 BoxF
2923 3129 BoxF
3020 3253 BoxF
3056 3376 BoxF
3159 3500 BoxF
3168 3624 BoxF
3289 3748 BoxF
3312 3872 BoxF
3344 3996 BoxF
3375 4120 BoxF
3392 4244 BoxF
3513 4367 BoxF
3712 4491 BoxF
3723 4615 BoxF
3848 4739 BoxF
5998 1536 BoxF
1.000 UP
1.000 UL
LT5
0.00 0.00 0.00 C LTb
5427 1236 M
[ [(Helvetica) 300.0 0.0 true true 0 (30VMs)]
] -100.0 MRshow
LT5
0.00 0.00 0.00 C 5607 1236 M
783 0 V
2194 1147 M
22 124 V
9 124 V
16 123 V
12 124 V
8 124 V
11 124 V
31 124 V
6 124 V
13 124 V
13 124 V
28 123 V
13 124 V
14 124 V
89 124 V
44 124 V
12 124 V
30 124 V
16 123 V
17 124 V
7 124 V
16 124 V
45 124 V
15 124 V
114 124 V
59 124 V
80 123 V
85 124 V
88 124 V
158 124 V
2194 1147 Circle
2216 1271 Circle
2225 1395 Circle
2241 1518 Circle
2253 1642 Circle
2261 1766 Circle
2272 1890 Circle
2303 2014 Circle
2309 2138 Circle
2322 2262 Circle
2335 2386 Circle
2363 2509 Circle
2376 2633 Circle
2390 2757 Circle
2479 2881 Circle
2523 3005 Circle
2535 3129 Circle
2565 3253 Circle
2581 3376 Circle
2598 3500 Circle
2605 3624 Circle
2621 3748 Circle
2666 3872 Circle
2681 3996 Circle
2795 4120 Circle
2854 4244 Circle
2934 4367 Circle
3019 4491 Circle
3107 4615 Circle
3265 4739 Circle
5998 1236 Circle
1.000 UL
LTb
1713 4739 N
0 -3716 V
5037 0 V
0 3716 V
-5037 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
