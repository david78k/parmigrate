%!PS-Adobe-2.0 EPSF-2.0
%%Title: sf-detail.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri May  3 09:50:24 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 72050 36050
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (sf-detail.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May  3 09:50:24 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1163 703 M
-63 0 V
stroke
980 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1163 120552 M
-63 0 V
stroke
980 120552 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
1163 240402 M
-63 0 V
stroke
980 240402 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1163 360251 M
-63 0 V
stroke
980 360251 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MRshow
1.000 UL
LTb
1163 480100 M
-63 0 V
stroke
980 480100 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MRshow
1.000 UL
LTb
1163 599950 M
-63 0 V
stroke
980 599950 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MRshow
1.000 UL
LTb
1163 719799 M
-63 0 V
stroke
980 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MRshow
1.000 UL
LTb
1163 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1163 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
288674 703 M
0 -63 V
0 719159 R
0 63 V
stroke
288674 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
576185 703 M
0 -63 V
0 719159 R
0 63 V
stroke
576185 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
863695 703 M
0 -63 V
0 719159 R
0 63 V
stroke
863695 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 600)]
] -66.7 MCshow
1.000 UL
LTb
1151206 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1151206 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 800)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1438717 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
63 0 V
stroke
1438900 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
1438717 144522 M
63 0 V
stroke
1438900 144522 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MLshow
1.000 UL
LTb
1438717 288341 M
63 0 V
stroke
1438900 288341 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MLshow
1.000 UL
LTb
1438717 432161 M
63 0 V
stroke
1438900 432161 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MLshow
1.000 UL
LTb
1438717 575980 M
63 0 V
stroke
1438900 575980 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MLshow
1.000 UL
LTb
1438717 719799 M
63 0 V
stroke
1438900 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
LCb setrgbcolor
400 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (number of evacuated VMs)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
1439599 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (evacuation ratio)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
719940 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (time \(sec\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
1437814 1866 M
[ [(Helvetica) 200.0 0.0 true true 0 (IC)]
] -66.7 MRshow
LT0
0.00 0.00 0.00 C 1437934 1866 M
543 0 V
145652 24673 M
22109 23970 V
16058 23970 V
1178 23969 V
8856 23970 V
17236 23970 V
6598 23970 V
9503 23970 V
5462 23970 V
46189 23970 V
3234 23970 V
14937 23969 V
23806 23970 V
36873 23970 V
141196 23970 V
21549 23970 V
23188 23970 V
38354 23970 V
76708 23969 V
7374 23970 V
55720 23970 V
47712 23970 V
33265 23970 V
114114 23970 V
175467 23970 V
68083 23970 V
48100 23969 V
59975 23970 V
170221 17626 V
145652 24673 Pls
167761 48643 Pls
183819 72613 Pls
184997 96582 Pls
193853 120552 Pls
211089 144522 Pls
217687 168492 Pls
227190 192462 Pls
232652 216432 Pls
278841 240402 Pls
282075 264372 Pls
297012 288341 Pls
320818 312311 Pls
357691 336281 Pls
498887 360251 Pls
520436 384221 Pls
543624 408191 Pls
581978 432161 Pls
658686 456130 Pls
666060 480100 Pls
721780 504070 Pls
769492 528040 Pls
802757 552010 Pls
916871 575980 Pls
1092338 599950 Pls
1160421 623920 Pls
1208521 647889 Pls
1268496 671859 Pls
1438205 1866 Pls
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LTb
1437814 1666 M
[ [(Helvetica) 200.0 0.0 true true 0 (AC)]
] -66.7 MRshow
LT1
0.00 0.00 0.00 C 1437934 1666 M
543 0 V
103244 24673 M
37851 23970 V
23978 23970 V
7820 23969 V
17351 23970 V
37506 23970 V
16604 23970 V
11702 23970 V
11673 23970 V
1624 23970 V
5262 23970 V
3823 23969 V
24194 23970 V
6556 23970 V
114185 23970 V
18400 23970 V
30318 23970 V
47555 23970 V
13053 23969 V
23000 23970 V
25661 23970 V
42753 23970 V
31094 23970 V
51637 23970 V
271209 23970 V
27241 23970 V
55389 23969 V
22354 23970 V
140924 23970 V
128733 23970 V
103244 24673 Crs
141095 48643 Crs
165073 72613 Crs
172893 96582 Crs
190244 120552 Crs
227750 144522 Crs
244354 168492 Crs
256056 192462 Crs
267729 216432 Crs
269353 240402 Crs
274615 264372 Crs
278438 288341 Crs
302632 312311 Crs
309188 336281 Crs
423373 360251 Crs
441773 384221 Crs
472091 408191 Crs
519646 432161 Crs
532699 456130 Crs
555699 480100 Crs
581360 504070 Crs
624113 528040 Crs
655207 552010 Crs
706844 575980 Crs
978053 599950 Crs
1005294 623920 Crs
1060683 647889 Crs
1083037 671859 Crs
1223961 695829 Crs
1352694 719799 Crs
1438205 1666 Crs
1.000 UP
1.000 UL
LT2
0.00 0.00 0.00 C LTb
1437814 1466 M
[ [(Helvetica) 200.0 0.0 true true 0 (1VM)]
] -66.7 MRshow
LT2
0.00 0.00 0.00 C 1437934 1466 M
543 0 V
97307 24673 M
71374 23970 V
75802 23970 V
68600 23969 V
75616 23970 V
73718 23970 V
78274 23970 V
73833 23970 V
76291 23970 V
71921 23970 V
75184 23970 V
71015 23969 V
72913 23970 V
71418 23970 V
120625 23970 V
135231 23970 V
120797 23970 V
8798 1613 V
97307 24673 Star
168681 48643 Star
244483 72613 Star
313083 96582 Star
388699 120552 Star
462417 144522 Star
540691 168492 Star
614524 192462 Star
690815 216432 Star
762736 240402 Star
837920 264372 Star
908935 288341 Star
981848 312311 Star
1053266 336281 Star
1173891 360251 Star
1309122 384221 Star
1429919 408191 Star
1438205 1466 Star
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LTb
1437814 1266 M
[ [(Helvetica) 200.0 0.0 true true 0 (5VMs)]
] -66.7 MRshow
LT3
0.00 0.00 0.00 C 1437934 1266 M
543 0 V
117217 24673 M
3982 23970 V
42264 23970 V
7705 23969 V
10710 23970 V
28708 23970 V
33222 23970 V
10940 23970 V
15094 23970 V
10336 23970 V
7892 23970 V
40611 23969 V
8122 23970 V
31856 23970 V
123357 23970 V
26609 23970 V
14030 23970 V
2444 23970 V
41028 23969 V
86512 23970 V
57143 23970 V
31281 23970 V
18674 23970 V
33179 23970 V
276758 23970 V
44319 23970 V
14865 23969 V
19565 23970 V
208689 23970 V
71605 6692 V
117217 24673 Box
121199 48643 Box
163463 72613 Box
171168 96582 Box
181878 120552 Box
210586 144522 Box
243808 168492 Box
254748 192462 Box
269842 216432 Box
280178 240402 Box
288070 264372 Box
328681 288341 Box
336803 312311 Box
368659 336281 Box
492016 360251 Box
518625 384221 Box
532655 408191 Box
535099 432161 Box
576127 456130 Box
662639 480100 Box
719782 504070 Box
751063 528040 Box
769737 552010 Box
802916 575980 Box
1079674 599950 Box
1123993 623920 Box
1138858 647889 Box
1158423 671859 Box
1367112 695829 Box
1438205 1266 Box
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LTb
1437814 1066 M
[ [(Helvetica) 200.0 0.0 true true 0 (10VMs)]
] -66.7 MRshow
LT4
0.00 0.00 0.00 C 1437934 1066 M
543 0 V
167085 24673 M
4342 23970 V
8970 23970 V
1912 23969 V
4198 23970 V
3220 23970 V
5678 23970 V
9100 23970 V
10135 23970 V
30102 23970 V
40985 23970 V
26436 23969 V
10480 23970 V
27069 23970 V
103432 23970 V
38886 23970 V
503 23970 V
5794 23970 V
8869 23969 V
8367 23970 V
45484 23970 V
28550 23970 V
40136 23970 V
17869 23970 V
263288 23970 V
43271 23970 V
12578 23969 V
18128 23970 V
117922 23970 V
123745 23970 V
167085 24673 BoxF
171427 48643 BoxF
180397 72613 BoxF
182309 96582 BoxF
186507 120552 BoxF
189727 144522 BoxF
195405 168492 BoxF
204505 192462 BoxF
214640 216432 BoxF
244742 240402 BoxF
285727 264372 BoxF
312163 288341 BoxF
322643 312311 BoxF
349712 336281 BoxF
453144 360251 BoxF
492030 384221 BoxF
492533 408191 BoxF
498327 432161 BoxF
507196 456130 BoxF
515563 480100 BoxF
561047 504070 BoxF
589597 528040 BoxF
629733 552010 BoxF
647602 575980 BoxF
910890 599950 BoxF
954161 623920 BoxF
966739 647889 BoxF
984867 671859 BoxF
1102789 695829 BoxF
1226534 719799 BoxF
1438205 1066 BoxF
1.000 UP
1.000 UL
LT5
0.00 0.00 0.00 C LTb
1437814 866 M
[ [(Helvetica) 200.0 0.0 true true 0 (30VMs)]
] -66.7 MRshow
LT5
0.00 0.00 0.00 C 1437934 866 M
543 0 V
303409 24673 M
13326 23970 V
22512 23970 V
7561 23969 V
3954 23970 V
8869 23970 V
8540 23970 V
15698 23970 V
4600 23970 V
12305 23970 V
5635 23970 V
5276 23969 V
4313 23970 V
12823 23970 V
90925 23970 V
12794 23970 V
10193 23970 V
1279 23970 V
26739 23969 V
6842 23970 V
7979 23970 V
8539 23970 V
7605 23970 V
28521 23970 V
135733 23970 V
6024 23970 V
23734 23969 V
11529 23970 V
121071 23970 V
144647 23970 V
303409 24673 Circle
316735 48643 Circle
339247 72613 Circle
346808 96582 Circle
350762 120552 Circle
359631 144522 Circle
368171 168492 Circle
383869 192462 Circle
388469 216432 Circle
400774 240402 Circle
406409 264372 Circle
411685 288341 Circle
415998 312311 Circle
428821 336281 Circle
519746 360251 Circle
532540 384221 Circle
542733 408191 Circle
544012 432161 Circle
570751 456130 Circle
577593 480100 Circle
585572 504070 Circle
594111 528040 Circle
601716 552010 Circle
630237 575980 Circle
765970 599950 Circle
771994 623920 Circle
795728 647889 Circle
807257 671859 Circle
928328 695829 Circle
1072975 719799 Circle
1438205 866 Circle
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
