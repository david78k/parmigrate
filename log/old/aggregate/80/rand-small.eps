%!PS-Adobe-2.0 EPSF-2.0
%%Title: rand-small.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Apr 19 02:27:07 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 72050 36050
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rand-small.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Apr 19 02:27:07 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1163 703 M
-63 0 V
stroke
980 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1163 120552 M
-63 0 V
stroke
980 120552 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
1163 240402 M
-63 0 V
stroke
980 240402 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
1163 360251 M
-63 0 V
stroke
980 360251 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MRshow
1.000 UL
LTb
1163 480100 M
-63 0 V
stroke
980 480100 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MRshow
1.000 UL
LTb
1163 599950 M
-63 0 V
stroke
980 599950 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MRshow
1.000 UL
LTb
1163 719799 M
-63 0 V
stroke
980 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 30)]
] -66.7 MRshow
1.000 UL
LTb
1163 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1163 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
206528 703 M
0 -63 V
0 719159 R
0 63 V
stroke
206528 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
411893 703 M
0 -63 V
0 719159 R
0 63 V
stroke
411893 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
617258 703 M
0 -63 V
0 719159 R
0 63 V
stroke
617258 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 600)]
] -66.7 MCshow
1.000 UL
LTb
822622 703 M
0 -63 V
0 719159 R
0 63 V
stroke
822622 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 800)]
] -66.7 MCshow
1.000 UL
LTb
1027987 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1027987 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
1.000 UL
LTb
1233352 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1233352 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1200)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
0 -63 V
0 719159 R
0 63 V
stroke
1438717 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1400)]
] -66.7 MCshow
1.000 UL
LTb
1438717 703 M
63 0 V
stroke
1438900 703 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MLshow
1.000 UL
LTb
1438717 144522 M
63 0 V
stroke
1438900 144522 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MLshow
1.000 UL
LTb
1438717 288341 M
63 0 V
stroke
1438900 288341 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MLshow
1.000 UL
LTb
1438717 432161 M
63 0 V
stroke
1438900 432161 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MLshow
1.000 UL
LTb
1438717 575980 M
63 0 V
stroke
1438900 575980 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MLshow
1.000 UL
LTb
1438717 719799 M
63 0 V
stroke
1438900 719799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MLshow
1.000 UL
LTb
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
LCb setrgbcolor
400 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (number of evacuated VMs)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
1439599 360251 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (evacuation ratio)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
719940 140 M
[ [(Helvetica) 200.0 0.0 true true 0 (time \(sec\))]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
0.00 0.00 0.00 C LTb
1437814 1866 M
[ [(Helvetica) 200.0 0.0 true true 0 (IC)]
] -66.7 MRshow
LT0
0.00 0.00 0.00 C 1437934 1866 M
543 0 V
66459 24673 M
83935 48643 L
18966 23970 V
7352 23969 V
4775 23970 V
1509 23970 V
19982 23970 V
6377 23970 V
13780 23970 V
26317 23970 V
44451 23970 V
16902 23969 V
26677 23970 V
31318 23970 V
51937 23970 V
18051 23970 V
46033 23970 V
16008 23970 V
13759 23969 V
31524 23970 V
14396 23970 V
26738 23970 V
22714 23970 V
6869 23970 V
15536 23970 V
13934 23970 V
31277 23969 V
70060 23970 V
7517 23970 V
57779 23970 V
66459 24673 Pls
83935 48643 Pls
102901 72613 Pls
110253 96582 Pls
115028 120552 Pls
116537 144522 Pls
136519 168492 Pls
142896 192462 Pls
156676 216432 Pls
182993 240402 Pls
227444 264372 Pls
244346 288341 Pls
271023 312311 Pls
302341 336281 Pls
354278 360251 Pls
372329 384221 Pls
418362 408191 Pls
434370 432161 Pls
448129 456130 Pls
479653 480100 Pls
494049 504070 Pls
520787 528040 Pls
543501 552010 Pls
550370 575980 Pls
565906 599950 Pls
579840 623920 Pls
611117 647889 Pls
681177 671859 Pls
688694 695829 Pls
746473 719799 Pls
1438205 1866 Pls
1.000 UP
1.000 UL
LT1
0.00 0.00 0.00 C LTb
1437814 1666 M
[ [(Helvetica) 200.0 0.0 true true 0 (AC)]
] -66.7 MRshow
LT1
0.00 0.00 0.00 C 1437934 1666 M
543 0 V
83032 24673 M
8101 23970 V
18730 23970 V
14765 23969 V
9067 23970 V
8656 23970 V
2239 23970 V
12609 23970 V
9868 23970 V
22262 23970 V
17260 23970 V
10217 23969 V
29008 23970 V
16347 23970 V
16491 23970 V
27806 23970 V
37028 23970 V
14057 23970 V
11942 23969 V
30373 23970 V
30692 23970 V
12271 23970 V
7506 23970 V
13174 23970 V
8748 23970 V
12867 23970 V
15792 23969 V
26698 23970 V
13574 23970 V
64341 23970 V
83032 24673 Crs
91133 48643 Crs
109863 72613 Crs
124628 96582 Crs
133695 120552 Crs
142351 144522 Crs
144590 168492 Crs
157199 192462 Crs
167067 216432 Crs
189329 240402 Crs
206589 264372 Crs
216806 288341 Crs
245814 312311 Crs
262161 336281 Crs
278652 360251 Crs
306458 384221 Crs
343486 408191 Crs
357543 432161 Crs
369485 456130 Crs
399858 480100 Crs
430550 504070 Crs
442821 528040 Crs
450327 552010 Crs
463501 575980 Crs
472249 599950 Crs
485116 623920 Crs
500908 647889 Crs
527606 671859 Crs
541180 695829 Crs
605521 719799 Crs
1438205 1666 Crs
1.000 UP
1.000 UL
LT2
0.00 0.00 0.00 C LTb
1437814 1466 M
[ [(Helvetica) 200.0 0.0 true true 0 (1VM)]
] -66.7 MRshow
LT2
0.00 0.00 0.00 C 1437934 1466 M
543 0 V
58203 24673 M
75995 23970 V
32520 23970 V
43650 23969 V
32068 23970 V
41093 23970 V
33331 23970 V
33916 23970 V
67308 23970 V
95259 23970 V
51793 23970 V
24336 23969 V
49996 23970 V
36791 23970 V
65799 23970 V
25927 23970 V
32725 23970 V
35333 23970 V
24059 23969 V
34521 23970 V
33937 23970 V
24859 23970 V
43065 23970 V
50284 23970 V
53395 23970 V
26081 23970 V
111369 23969 V
25876 23970 V
36299 23970 V
61291 23970 V
58203 24673 Star
134198 48643 Star
166718 72613 Star
210368 96582 Star
242436 120552 Star
283529 144522 Star
316860 168492 Star
350776 192462 Star
418084 216432 Star
513343 240402 Star
565136 264372 Star
589472 288341 Star
639468 312311 Star
676259 336281 Star
742058 360251 Star
767985 384221 Star
800710 408191 Star
836043 432161 Star
860102 456130 Star
894623 480100 Star
928560 504070 Star
953419 528040 Star
996484 552010 Star
1046768 575980 Star
1100163 599950 Star
1126244 623920 Star
1237613 647889 Star
1263489 671859 Star
1299788 695829 Star
1361079 719799 Star
1438205 1466 Star
1.000 UP
1.000 UL
LT3
0.00 0.00 0.00 C LTb
1437814 1266 M
[ [(Helvetica) 200.0 0.0 true true 0 (5VMs)]
] -66.7 MRshow
LT3
0.00 0.00 0.00 C 1437934 1266 M
543 0 V
63614 24673 M
8112 23970 V
92037 72613 L
17281 23969 V
13133 23970 V
24275 23970 V
30014 23970 V
18452 23970 V
34789 23970 V
34942 23970 V
37397 23970 V
8040 23969 V
43743 23970 V
14591 23970 V
22672 23970 V
20999 23970 V
2896 23970 V
11623 23970 V
23853 23969 V
7219 23970 V
22313 23970 V
14232 23970 V
9652 23970 V
19715 23970 V
19386 23970 V
27232 23970 V
677 23969 V
12682 23970 V
16460 23970 V
30640 23970 V
63614 24673 Box
71726 48643 Box
92037 72613 Box
109318 96582 Box
122451 120552 Box
146726 144522 Box
176740 168492 Box
195192 192462 Box
229981 216432 Box
264923 240402 Box
302320 264372 Box
310360 288341 Box
354103 312311 Box
368694 336281 Box
391366 360251 Box
412365 384221 Box
415261 408191 Box
426884 432161 Box
450737 456130 Box
457956 480100 Box
480269 504070 Box
494501 528040 Box
504153 552010 Box
523868 575980 Box
543254 599950 Box
570486 623920 Box
571163 647889 Box
583845 671859 Box
600305 695829 Box
630945 719799 Box
1438205 1266 Box
1.000 UP
1.000 UL
LT4
0.00 0.00 0.00 C LTb
1437814 1066 M
[ [(Helvetica) 200.0 0.0 true true 0 (10VMs)]
] -66.7 MRshow
LT4
0.00 0.00 0.00 C 1437934 1066 M
543 0 V
66921 24673 M
83617 48643 L
6428 23970 V
14108 23969 V
16224 23970 V
28197 23970 V
8851 23970 V
6089 23970 V
12096 23970 V
23022 23970 V
10730 23970 V
9067 23969 V
26636 23970 V
3214 23970 V
23945 23970 V
3327 23970 V
7424 23970 V
14160 23970 V
23278 23969 V
14509 23970 V
6017 23970 V
8020 23970 V
11367 23970 V
7198 23970 V
12270 23970 V
9560 23970 V
38701 23969 V
7835 23970 V
38156 23970 V
29686 23970 V
66921 24673 BoxF
83617 48643 BoxF
90045 72613 BoxF
104153 96582 BoxF
120377 120552 BoxF
148574 144522 BoxF
157425 168492 BoxF
163514 192462 BoxF
175610 216432 BoxF
198632 240402 BoxF
209362 264372 BoxF
218429 288341 BoxF
245065 312311 BoxF
248279 336281 BoxF
272224 360251 BoxF
275551 384221 BoxF
282975 408191 BoxF
297135 432161 BoxF
320413 456130 BoxF
334922 480100 BoxF
340939 504070 BoxF
348959 528040 BoxF
360326 552010 BoxF
367524 575980 BoxF
379794 599950 BoxF
389354 623920 BoxF
428055 647889 BoxF
435890 671859 BoxF
474046 695829 BoxF
503732 719799 BoxF
1438205 1066 BoxF
1.000 UP
1.000 UL
LT5
0.00 0.00 0.00 C LTb
1437814 866 M
[ [(Helvetica) 200.0 0.0 true true 0 (30VMs)]
] -66.7 MRshow
LT5
0.00 0.00 0.00 C 1437934 866 M
543 0 V
150843 24673 M
9509 23970 V
5627 23970 V
5462 23969 V
1366 23970 V
4949 23970 V
5535 23970 V
3933 23970 V
3419 23970 V
2331 23970 V
17579 23970 V
3532 23969 V
4262 23970 V
3655 23970 V
23350 23970 V
9087 23970 V
13401 23970 V
3090 23970 V
3789 23969 V
1941 23970 V
3501 23970 V
8071 23970 V
5299 23970 V
6356 23970 V
63170 23970 V
8985 23970 V
4097 23969 V
17137 23970 V
46536 23970 V
34758 23970 V
150843 24673 Circle
160352 48643 Circle
165979 72613 Circle
171441 96582 Circle
172807 120552 Circle
177756 144522 Circle
183291 168492 Circle
187224 192462 Circle
190643 216432 Circle
192974 240402 Circle
210553 264372 Circle
214085 288341 Circle
218347 312311 Circle
222002 336281 Circle
245352 360251 Circle
254439 384221 Circle
267840 408191 Circle
270930 432161 Circle
274719 456130 Circle
276660 480100 Circle
280161 504070 Circle
288232 528040 Circle
293531 552010 Circle
299887 575980 Circle
363057 599950 Circle
372042 623920 Circle
376139 647889 Circle
393276 671859 Circle
439812 695829 Circle
474570 719799 Circle
1438205 866 Circle
1.000 UL
LTb
1163 719799 N
1163 703 L
1437554 0 V
0 719096 V
-1437554 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
