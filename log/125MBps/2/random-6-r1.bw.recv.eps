%!PS-Adobe-2.0 EPSF-2.0
%%Title: random-6-r1.bw.recv.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 12 01:14:07 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 true def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (random-6-r1.bw.recv.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 12 01:14:07 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .0238 .0873 .1508 
  .2143 .2778 .3413 .4048 .4683 .5317 .5952 .6587 .7222 .7857 .8492 .9127 
  .9762 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 .9444 .881 .8175 .754 .6905 .627 
  .5635 .5 ] def
/GreenA [0 0 0 0 0 0 0 0 .0079 .0714 .1349 .1984 .2619 .3254 .3889 .4524 
  .5159 .5794 .6429 .7063 .7698 .8333 .8968 .9603 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9603 .8968 .8333 .7698 .7063 .6429 .5794 .5159 .4524 .3889 .3254 
  .2619 .1984 .1349 .0714 .0079 0 0 0 0 0 0 0 0 ] def
/BlueA [.5 .5635 .627 .6905 .754 .8175 .881 .9444 1 1 1 1 1 1 1 1 1 1 1 1 1 
  1 1 1 .9762 .9127 .8492 .7857 .7222 .6587 .5952 .5317 .4683 .4048 .3413 
  .2778 .2143 .1508 .0873 .0238 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
  0 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
0.500 UL
LTb
1100 640 M
88 0 V
10032 0 R
-88 0 V
stroke
980 640 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
1100 1933 M
88 0 V
10032 0 R
-88 0 V
stroke
980 1933 M
[ [({}) 200.0 0.0 true true 0 (20)]
] -66.7 MRshow
0.500 UL
LTb
1100 3227 M
88 0 V
10032 0 R
-88 0 V
stroke
980 3227 M
[ [({}) 200.0 0.0 true true 0 (40)]
] -66.7 MRshow
0.500 UL
LTb
1100 4520 M
88 0 V
10032 0 R
-88 0 V
stroke
980 4520 M
[ [({}) 200.0 0.0 true true 0 (60)]
] -66.7 MRshow
0.500 UL
LTb
1100 5813 M
88 0 V
10032 0 R
-88 0 V
stroke
980 5813 M
[ [({}) 200.0 0.0 true true 0 (80)]
] -66.7 MRshow
0.500 UL
LTb
1100 7107 M
88 0 V
10032 0 R
-88 0 V
stroke
980 7107 M
[ [({}) 200.0 0.0 true true 0 (100)]
] -66.7 MRshow
0.500 UL
LTb
1100 8400 M
88 0 V
10032 0 R
-88 0 V
stroke
980 8400 M
[ [({}) 200.0 0.0 true true 0 (120)]
] -66.7 MRshow
0.500 UL
LTb
1100 640 M
0 88 V
0 7672 R
0 -88 V
stroke
1100 440 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
3124 640 M
0 88 V
0 7672 R
0 -88 V
stroke
3124 440 M
[ [({}) 200.0 0.0 true true 0 (100)]
] -66.7 MCshow
0.500 UL
LTb
5148 640 M
0 88 V
0 7672 R
0 -88 V
stroke
5148 440 M
[ [({}) 200.0 0.0 true true 0 (200)]
] -66.7 MCshow
0.500 UL
LTb
7172 640 M
0 88 V
0 7672 R
0 -88 V
stroke
7172 440 M
[ [({}) 200.0 0.0 true true 0 (300)]
] -66.7 MCshow
0.500 UL
LTb
9196 640 M
0 88 V
0 7672 R
0 -88 V
stroke
9196 440 M
[ [({}) 200.0 0.0 true true 0 (400)]
] -66.7 MCshow
0.500 UL
LTb
11220 640 M
0 88 V
0 7672 R
0 -88 V
stroke
11220 440 M
[ [({}) 200.0 0.0 true true 0 (500)]
] -66.7 MCshow
0.500 UL
LTb
0.500 UL
LTb
1100 8400 N
0 -7760 V
10120 0 V
0 7760 V
-10120 0 V
Z stroke
LCb setrgbcolor
400 4520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [({}) 200.0 0.0 true true 0 (THROUGHPUT \(MB/s\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
6160 140 M
[ [({}) 200.0 0.0 true true 0 (TIME \(SEC\))]
] -66.7 MCshow
LTb
1.000 UP
0.500 UL
LTb
0.500 UL
LT0
LTb
10317 8237 M
[ [(Helvetica) 200.0 0.0 true true 0 (AGGREGATE)]
] -66.7 MRshow
LT0
10437 8237 M
543 0 V
1120 640 M
20 0 V
21 0 V
20 0 V
20 0 V
20 0 V
21 0 V
20 5 V
20 8 V
20 1927 V
21 841 V
20 323 V
20 0 V
20 0 V
21 0 V
20 259 V
20 194 V
20 0 V
21 1228 V
20 -517 V
20 -517 V
20 905 V
21 711 V
20 388 V
20 -711 V
20 -129 V
20 646 V
21 324 V
20 258 V
20 -258 V
20 -388 V
21 -259 V
20 -2134 V
20 1358 V
20 259 V
21 -259 V
20 -1487 V
20 2392 V
20 -1487 V
21 2781 V
20 -194 V
20 1099 V
20 -129 V
21 0 V
20 -65 V
20 129 V
20 0 V
21 -129 V
20 194 V
20 -194 V
20 259 V
20 -65 V
21 65 V
20 -65 V
20 -388 V
20 -194 V
21 -453 V
20 -194 V
20 0 V
20 388 V
21 194 V
20 259 V
20 -194 V
20 -582 V
21 259 V
20 -2199 V
20 388 V
20 1229 V
21 452 V
20 582 V
20 -194 V
20 -840 V
21 194 V
20 -1229 V
20 970 V
20 905 V
20 65 V
21 -194 V
20 323 V
20 65 V
20 129 V
21 -194 V
20 259 V
20 129 V
20 -646 V
21 0 V
20 -324 V
20 388 V
20 518 V
21 -130 V
20 -840 V
20 323 V
20 129 V
21 65 V
20 -194 V
20 -711 V
20 129 V
21 129 V
20 388 V
20 -258 V
20 452 V
20 -194 V
21 -646 V
stroke 3185 6719 M
20 -1100 V
20 518 V
20 129 V
21 -582 V
20 970 V
20 388 V
20 129 V
21 -840 V
20 -453 V
20 -905 V
20 1034 V
21 -1034 V
20 582 V
20 64 V
20 1035 V
21 -1164 V
20 -1487 V
20 1164 V
20 258 V
21 -129 V
20 970 V
20 65 V
20 -130 V
20 -194 V
21 -776 V
20 712 V
20 -324 V
20 906 V
21 776 V
20 -453 V
20 970 V
20 -194 V
21 -453 V
20 -711 V
20 -1229 V
20 -970 V
21 712 V
20 1746 V
20 1164 V
20 -841 V
21 -129 V
20 194 V
20 323 V
20 -841 V
21 259 V
20 517 V
20 -1099 V
20 -1099 V
20 1099 V
21 129 V
20 776 V
20 -711 V
20 -1487 V
21 2069 V
20 647 V
20 129 V
20 -323 V
21 711 V
20 -194 V
20 -388 V
20 453 V
21 129 V
20 0 V
20 0 V
20 -388 V
21 388 V
20 -65 V
20 -64 V
20 -518 V
21 518 V
20 129 V
20 -194 V
20 0 V
20 65 V
21 64 V
20 -970 V
20 -388 V
20 -64 V
21 517 V
20 517 V
20 65 V
20 -647 V
21 388 V
20 194 V
20 -323 V
20 -453 V
21 518 V
20 -1164 V
20 -582 V
20 776 V
21 517 V
20 841 V
20 -453 V
20 517 V
21 0 V
20 130 V
20 -518 V
20 65 V
20 388 V
21 0 V
20 -323 V
20 -647 V
20 259 V
21 452 V
stroke 5290 7753 M
20 -64 V
20 258 V
20 -194 V
21 -64 V
20 64 V
20 130 V
20 -65 V
21 129 V
20 -129 V
20 -453 V
20 259 V
21 -129 V
20 323 V
20 -388 V
20 0 V
21 259 V
20 388 V
20 -130 V
20 0 V
20 194 V
21 -258 V
20 258 V
20 -194 V
20 0 V
21 -64 V
20 -65 V
20 0 V
20 -323 V
21 452 V
20 -194 V
20 0 V
20 -323 V
21 -388 V
20 -194 V
20 323 V
20 194 V
21 -776 V
20 65 V
20 323 V
20 -582 V
21 647 V
20 -65 V
20 582 V
20 -517 V
20 -1164 V
21 647 V
20 -130 V
20 194 V
20 130 V
21 -453 V
20 259 V
20 194 V
20 582 V
21 -194 V
20 258 V
20 647 V
20 -65 V
21 -1487 V
20 388 V
20 970 V
20 388 V
21 -129 V
20 -65 V
20 129 V
20 65 V
21 -65 V
20 -129 V
20 129 V
20 -194 V
20 -323 V
21 194 V
20 65 V
20 -388 V
20 129 V
21 -65 V
20 -129 V
20 -647 V
20 582 V
21 -64 V
20 -712 V
20 518 V
20 323 V
21 -517 V
20 0 V
20 388 V
20 -712 V
21 0 V
20 1100 V
20 64 V
20 -1552 V
21 582 V
20 324 V
20 452 V
20 -194 V
20 388 V
21 -129 V
20 -259 V
20 -194 V
20 0 V
21 647 V
20 -129 V
20 -582 V
20 388 V
21 129 V
stroke 7395 7624 M
20 259 V
20 64 V
20 -323 V
21 129 V
20 -64 V
20 -259 V
20 129 V
21 -129 V
20 65 V
20 -388 V
20 711 V
21 0 V
20 -129 V
20 0 V
20 452 V
20 -64 V
21 0 V
20 -324 V
20 259 V
20 -65 V
21 130 V
20 -194 V
20 0 V
20 129 V
21 -259 V
20 194 V
20 -129 V
20 0 V
21 -65 V
20 130 V
20 -194 V
20 -65 V
21 194 V
20 0 V
20 129 V
20 -129 V
21 -194 V
20 323 V
20 0 V
20 130 V
20 0 V
21 -388 V
20 194 V
20 -65 V
20 129 V
21 -129 V
20 -65 V
20 65 V
20 -129 V
21 -130 V
20 -646 V
20 646 V
20 -64 V
21 388 V
20 -906 V
20 518 V
20 -388 V
21 -130 V
20 -129 V
20 -905 V
20 129 V
21 388 V
20 -65 V
20 453 V
20 -259 V
20 324 V
21 517 V
20 129 V
20 -776 V
20 -258 V
21 840 V
20 647 V
20 -1099 V
20 -194 V
21 452 V
20 65 V
20 194 V
20 -453 V
21 -64 V
20 323 V
20 -1940 V
20 841 V
21 129 V
20 -582 V
20 582 V
20 517 V
21 -64 V
20 -388 V
20 517 V
20 970 V
20 323 V
21 -3233 V
20 -1487 V
20 517 V
20 388 V
21 905 V
20 582 V
20 -840 V
20 -2070 V
21 194 V
20 130 V
20 -130 V
20 130 V
21 3298 V
stroke 9500 6525 M
20 1746 V
20 0 V
20 0 V
21 0 V
20 -2199 V
20 -2199 V
20 970 V
21 -452 V
20 258 V
20 -711 V
20 453 V
20 0 V
21 388 V
20 -324 V
20 -258 V
20 -130 V
21 582 V
20 -582 V
20 -1875 V
9904 707 L
2.000 UP
stroke
LT5
LTb
10317 8037 M
[ [(Helvetica) 200.0 0.0 true true 0 (PER VM)]
] -66.7 MRshow
LT5
10437 8037 M
543 0 V
1120 640 M
20 0 V
21 0 V
20 0 V
20 0 V
20 0 V
21 0 V
20 0 V
20 0 V
20 36 V
21 15 V
20 6 V
20 0 V
20 0 V
21 0 V
20 5 V
20 4 V
20 0 V
21 23 V
20 -10 V
20 -10 V
20 17 V
21 13 V
20 8 V
20 -14 V
20 -2 V
20 12 V
21 6 V
20 5 V
20 -5 V
20 -7 V
21 -5 V
20 -40 V
20 26 V
20 4 V
21 -4 V
20 -28 V
20 44 V
20 -27 V
21 51 V
20 -3 V
20 20 V
20 -2 V
21 0 V
20 -1 V
20 2 V
20 0 V
21 -2 V
20 3 V
20 -3 V
20 4 V
20 -1 V
21 1 V
20 -1 V
20 -7 V
20 -4 V
21 -8 V
20 -4 V
20 0 V
20 8 V
21 3 V
20 5 V
20 -4 V
20 -10 V
21 4 V
20 -40 V
20 7 V
20 23 V
21 8 V
20 11 V
20 -4 V
20 -15 V
21 3 V
20 -23 V
20 18 V
20 17 V
20 1 V
21 -3 V
20 6 V
20 1 V
20 2 V
21 -3 V
20 5 V
20 2 V
20 -12 V
21 0 V
20 -6 V
20 7 V
20 10 V
21 -3 V
20 -15 V
20 6 V
20 2 V
21 1 V
20 -3 V
20 -13 V
20 2 V
21 2 V
20 8 V
20 -5 V
20 8 V
20 -3 V
21 -12 V
stroke 3185 753 M
20 -21 V
20 10 V
20 2 V
21 -11 V
20 18 V
20 8 V
20 2 V
21 -16 V
20 -8 V
20 -17 V
20 19 V
21 -19 V
20 11 V
20 1 V
20 19 V
21 -21 V
20 -28 V
20 22 V
20 5 V
21 -3 V
20 18 V
20 1 V
20 -2 V
20 -4 V
21 -14 V
20 13 V
20 -6 V
20 17 V
21 14 V
20 -8 V
20 18 V
20 -4 V
21 -8 V
20 -13 V
20 -23 V
20 -18 V
21 13 V
20 33 V
20 21 V
20 -15 V
21 -3 V
20 4 V
20 6 V
20 -16 V
21 5 V
20 10 V
20 -21 V
20 -20 V
20 20 V
21 3 V
20 14 V
20 -13 V
20 -28 V
21 39 V
20 12 V
20 2 V
20 -6 V
21 13 V
20 -3 V
20 -8 V
20 9 V
21 2 V
20 0 V
20 0 V
20 -7 V
21 7 V
20 -1 V
20 -1 V
20 -10 V
21 10 V
20 2 V
20 -3 V
20 0 V
20 1 V
21 1 V
20 -18 V
20 -7 V
20 -1 V
21 9 V
20 10 V
20 1 V
20 -12 V
21 7 V
20 4 V
20 -6 V
20 -9 V
21 10 V
20 -22 V
20 -10 V
20 14 V
21 10 V
20 15 V
20 -8 V
20 9 V
21 0 V
20 3 V
20 -10 V
20 1 V
20 8 V
21 0 V
20 -6 V
20 -12 V
20 4 V
21 9 V
stroke 5290 772 M
20 -1 V
20 4 V
20 -3 V
21 -1 V
20 1 V
20 2 V
20 -1 V
21 2 V
20 -2 V
20 -8 V
20 4 V
21 -2 V
20 6 V
20 -7 V
20 0 V
21 5 V
20 7 V
20 -3 V
20 0 V
20 4 V
21 -5 V
20 5 V
20 -4 V
20 0 V
21 -1 V
20 -1 V
20 0 V
20 -6 V
21 8 V
20 -3 V
20 0 V
20 -6 V
21 -7 V
20 -4 V
20 6 V
20 4 V
21 -15 V
20 1 V
20 6 V
20 -10 V
21 12 V
20 -2 V
20 11 V
20 -9 V
20 -22 V
21 12 V
20 -2 V
20 3 V
20 3 V
21 -9 V
20 5 V
20 4 V
20 10 V
21 -3 V
20 5 V
20 12 V
20 -2 V
21 -27 V
20 7 V
20 18 V
20 7 V
21 -2 V
20 -1 V
20 2 V
20 1 V
21 -1 V
20 -2 V
20 2 V
20 -4 V
20 -6 V
21 4 V
20 1 V
20 -7 V
20 2 V
21 -1 V
20 -2 V
20 -12 V
20 11 V
21 -2 V
20 -13 V
20 10 V
20 6 V
21 -10 V
20 0 V
20 7 V
20 -13 V
21 0 V
20 21 V
20 1 V
20 -29 V
21 11 V
20 6 V
20 8 V
20 -3 V
20 7 V
21 -3 V
20 -4 V
20 -4 V
20 0 V
21 12 V
20 -2 V
20 -11 V
20 7 V
21 2 V
stroke 7395 769 M
20 5 V
20 1 V
20 -6 V
21 3 V
20 -1 V
20 -5 V
20 2 V
21 -2 V
20 1 V
20 -7 V
20 13 V
21 0 V
20 -2 V
20 0 V
20 8 V
20 -1 V
21 0 V
20 -6 V
20 5 V
20 -2 V
21 3 V
20 -4 V
20 0 V
20 3 V
21 -5 V
20 3 V
20 -2 V
20 0 V
21 -1 V
20 2 V
20 -3 V
20 -2 V
21 4 V
20 0 V
20 2 V
20 -2 V
21 -4 V
20 6 V
20 0 V
20 3 V
20 0 V
21 -7 V
20 3 V
20 -1 V
20 2 V
21 -2 V
20 -1 V
20 1 V
20 -2 V
21 -3 V
20 -12 V
20 12 V
20 -1 V
21 7 V
20 -17 V
20 10 V
20 -7 V
21 -3 V
20 -2 V
20 -17 V
20 3 V
21 7 V
20 -1 V
20 8 V
20 -5 V
20 6 V
21 10 V
20 2 V
20 -14 V
20 -5 V
21 16 V
20 12 V
20 -21 V
20 -3 V
21 8 V
20 1 V
20 4 V
20 -9 V
21 -1 V
20 6 V
20 -36 V
20 16 V
21 2 V
20 -11 V
20 11 V
20 10 V
21 -1 V
20 -8 V
20 10 V
20 18 V
20 6 V
21 -60 V
20 -28 V
20 10 V
20 7 V
21 17 V
20 11 V
20 -16 V
20 -38 V
21 4 V
20 2 V
20 -2 V
20 2 V
21 61 V
stroke 9500 749 M
20 32 V
20 0 V
20 0 V
21 0 V
20 -40 V
20 -41 V
20 18 V
21 -9 V
20 5 V
20 -13 V
20 8 V
20 0 V
21 8 V
20 -6 V
20 -5 V
20 -3 V
21 11 V
20 -11 V
20 -34 V
20 -28 V
1120 640 Star
1140 640 Star
1161 640 Star
1181 640 Star
1201 640 Star
1221 640 Star
1242 640 Star
1262 640 Star
1282 640 Star
1302 676 Star
1323 691 Star
1343 697 Star
1363 697 Star
1383 697 Star
1404 697 Star
1424 702 Star
1444 706 Star
1464 706 Star
1485 729 Star
1505 719 Star
1525 709 Star
1545 726 Star
1566 739 Star
1586 747 Star
1606 733 Star
1626 731 Star
1646 743 Star
1667 749 Star
1687 754 Star
1707 749 Star
1727 742 Star
1748 737 Star
1768 697 Star
1788 723 Star
1808 727 Star
1829 723 Star
1849 695 Star
1869 739 Star
1889 712 Star
1910 763 Star
1930 760 Star
1950 780 Star
1970 778 Star
1991 778 Star
2011 777 Star
2031 779 Star
2051 779 Star
2072 777 Star
2092 780 Star
2112 777 Star
2132 781 Star
2152 780 Star
2173 781 Star
2193 780 Star
2213 773 Star
2233 769 Star
2254 761 Star
2274 757 Star
2294 757 Star
2314 765 Star
2335 768 Star
2355 773 Star
2375 769 Star
2395 759 Star
2416 763 Star
2436 723 Star
2456 730 Star
2476 753 Star
2497 761 Star
2517 772 Star
2537 768 Star
2557 753 Star
2578 756 Star
2598 733 Star
2618 751 Star
2638 768 Star
2658 769 Star
2679 766 Star
2699 772 Star
2719 773 Star
2739 775 Star
2760 772 Star
2780 777 Star
2800 779 Star
2820 767 Star
2841 767 Star
2861 761 Star
2881 768 Star
2901 778 Star
2922 775 Star
2942 760 Star
2962 766 Star
2982 768 Star
3003 769 Star
3023 766 Star
3043 753 Star
3063 755 Star
3084 757 Star
3104 765 Star
3124 760 Star
3144 768 Star
3164 765 Star
3185 753 Star
3205 732 Star
3225 742 Star
3245 744 Star
3266 733 Star
3286 751 Star
3306 759 Star
3326 761 Star
3347 745 Star
3367 737 Star
3387 720 Star
3407 739 Star
3428 720 Star
3448 731 Star
3468 732 Star
3488 751 Star
3509 730 Star
3529 702 Star
3549 724 Star
3569 729 Star
3590 726 Star
3610 744 Star
3630 745 Star
3650 743 Star
3670 739 Star
3691 725 Star
3711 738 Star
3731 732 Star
3751 749 Star
3772 763 Star
3792 755 Star
3812 773 Star
3832 769 Star
3853 761 Star
3873 748 Star
3893 725 Star
3913 707 Star
3934 720 Star
3954 753 Star
3974 774 Star
3994 759 Star
4015 756 Star
4035 760 Star
4055 766 Star
4075 750 Star
4096 755 Star
4116 765 Star
4136 744 Star
4156 724 Star
4176 744 Star
4197 747 Star
4217 761 Star
4237 748 Star
4257 720 Star
4278 759 Star
4298 771 Star
4318 773 Star
4338 767 Star
4359 780 Star
4379 777 Star
4399 769 Star
4419 778 Star
4440 780 Star
4460 780 Star
4480 780 Star
4500 773 Star
4521 780 Star
4541 779 Star
4561 778 Star
4581 768 Star
4602 778 Star
4622 780 Star
4642 777 Star
4662 777 Star
4682 778 Star
4703 779 Star
4723 761 Star
4743 754 Star
4763 753 Star
4784 762 Star
4804 772 Star
4824 773 Star
4844 761 Star
4865 768 Star
4885 772 Star
4905 766 Star
4925 757 Star
4946 767 Star
4966 745 Star
4986 735 Star
5006 749 Star
5027 759 Star
5047 774 Star
5067 766 Star
5087 775 Star
5108 775 Star
5128 778 Star
5148 768 Star
5168 769 Star
5188 777 Star
5209 777 Star
5229 771 Star
5249 759 Star
5269 763 Star
5290 772 Star
5310 771 Star
5330 775 Star
5350 772 Star
5371 771 Star
5391 772 Star
5411 774 Star
5431 773 Star
5452 775 Star
5472 773 Star
5492 765 Star
5512 769 Star
5533 767 Star
5553 773 Star
5573 766 Star
5593 766 Star
5614 771 Star
5634 778 Star
5654 775 Star
5674 775 Star
5694 779 Star
5715 774 Star
5735 779 Star
5755 775 Star
5775 775 Star
5796 774 Star
5816 773 Star
5836 773 Star
5856 767 Star
5877 775 Star
5897 772 Star
5917 772 Star
5937 766 Star
5958 759 Star
5978 755 Star
5998 761 Star
6018 765 Star
6039 750 Star
6059 751 Star
6079 757 Star
6099 747 Star
6120 759 Star
6140 757 Star
6160 768 Star
6180 759 Star
6200 737 Star
6221 749 Star
6241 747 Star
6261 750 Star
6281 753 Star
6302 744 Star
6322 749 Star
6342 753 Star
6362 763 Star
6383 760 Star
6403 765 Star
6423 777 Star
6443 775 Star
6464 748 Star
6484 755 Star
6504 773 Star
6524 780 Star
6545 778 Star
6565 777 Star
6585 779 Star
6605 780 Star
6626 779 Star
6646 777 Star
6666 779 Star
6686 775 Star
6706 769 Star
6727 773 Star
6747 774 Star
6767 767 Star
6787 769 Star
6808 768 Star
6828 766 Star
6848 754 Star
6868 765 Star
6889 763 Star
6909 750 Star
6929 760 Star
6949 766 Star
6970 756 Star
6990 756 Star
7010 763 Star
7030 750 Star
7051 750 Star
7071 771 Star
7091 772 Star
7111 743 Star
7132 754 Star
7152 760 Star
7172 768 Star
7192 765 Star
7212 772 Star
7233 769 Star
7253 765 Star
7273 761 Star
7293 761 Star
7314 773 Star
7334 771 Star
7354 760 Star
7374 767 Star
7395 769 Star
7415 774 Star
7435 775 Star
7455 769 Star
7476 772 Star
7496 771 Star
7516 766 Star
7536 768 Star
7557 766 Star
7577 767 Star
7597 760 Star
7617 773 Star
7638 773 Star
7658 771 Star
7678 771 Star
7698 779 Star
7718 778 Star
7739 778 Star
7759 772 Star
7779 777 Star
7799 775 Star
7820 778 Star
7840 774 Star
7860 774 Star
7880 777 Star
7901 772 Star
7921 775 Star
7941 773 Star
7961 773 Star
7982 772 Star
8002 774 Star
8022 771 Star
8042 769 Star
8063 773 Star
8083 773 Star
8103 775 Star
8123 773 Star
8144 769 Star
8164 775 Star
8184 775 Star
8204 778 Star
8224 778 Star
8245 771 Star
8265 774 Star
8285 773 Star
8305 775 Star
8326 773 Star
8346 772 Star
8366 773 Star
8386 771 Star
8407 768 Star
8427 756 Star
8447 768 Star
8467 767 Star
8488 774 Star
8508 757 Star
8528 767 Star
8548 760 Star
8569 757 Star
8589 755 Star
8609 738 Star
8629 741 Star
8650 748 Star
8670 747 Star
8690 755 Star
8710 750 Star
8730 756 Star
8751 766 Star
8771 768 Star
8791 754 Star
8811 749 Star
8832 765 Star
8852 777 Star
8872 756 Star
8892 753 Star
8913 761 Star
8933 762 Star
8953 766 Star
8973 757 Star
8994 756 Star
9014 762 Star
9034 726 Star
9054 742 Star
9075 744 Star
9095 733 Star
9115 744 Star
9135 754 Star
9156 753 Star
9176 745 Star
9196 755 Star
9216 773 Star
9236 779 Star
9257 719 Star
9277 691 Star
9297 701 Star
9317 708 Star
9338 725 Star
9358 736 Star
9378 720 Star
9398 682 Star
9419 686 Star
9439 688 Star
9459 686 Star
9479 688 Star
9500 749 Star
9520 781 Star
9540 781 Star
9560 781 Star
9581 781 Star
9601 741 Star
9621 700 Star
9641 718 Star
9662 709 Star
9682 714 Star
9702 701 Star
9722 709 Star
9742 709 Star
9763 717 Star
9783 711 Star
9803 706 Star
9823 703 Star
9844 714 Star
9864 703 Star
9884 669 Star
9904 641 Star
10708 8037 Star
1.000 UP
0.500 UL
LTb
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: {} Helvetica
